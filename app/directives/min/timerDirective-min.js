app.directive("timerCounter",[function(){return{restrict:"E",scope:{size:"@",strokeWidth:"@",stroke:"@",counterClockwise:"@",complete:"&",background:"@"},compile:function(t,e){return function(t,e,r){t.offset=/firefox/i.test(navigator.userAgent)?-89.9:-90;var s=function(){t.strokeWidthCapped=Math.min(t.strokeWidth,t.size/2-1),t.radius=Math.max((t.size-t.strokeWidthCapped)/2-1,0),t.circumference=2*Math.PI*t.radius};t.$watchCollection("[size, strokeWidth]",s),s()}},template:'<svg ng-attr-width="{{size}}" ng-attr-height="{{size}}"><circle class="ngpa-background" fill="none" ng-if="background" ng-attr-cx="{{size/2}}" ng-attr-cy="{{size/2}}" ng-attr-r="{{radius}}" ng-attr-stroke="{{background}}" ng-attr-stroke-width="{{strokeWidthCapped}}"/><circle class="ngpa-progress" fill="none" ng-attr-cx="{{size/2}}" ng-attr-cy="{{size/2}}" ng-attr-r="{{radius}}" ng-attr-stroke="{{stroke}}" ng-attr-stroke-width="{{strokeWidthCapped}}"ng-attr-stroke-dasharray="{{circumference}}"ng-attr-stroke-dashoffset="{{(1 - complete()) * circumference}}"ng-attr-transform="rotate({{offset}}, {{size/2}}, {{size/2}})'+"{{ (counterClockwise && counterClockwise != 'false') ? ' translate(0, ' + size + ') scale(1, -1)' : '' }}\"/></svg>"}}]);